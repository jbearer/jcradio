function next_up(user, letter) {
    $("#next-up").html(`Next up... ${user.username} with '${letter}'`);
        // Update the next up indicator.

    // If the current user is the next up user, notify them.
    if (logged_in() && current_user().id == user.id) {
        message = `It's your turn! Your letter is: ${letter}`;

        last_two_paths = new URL(window.location.href).pathname.split('/').slice(-2);


        if (last_two_paths[0] === "stations" || last_two_paths[1] == "search") {
            // If we're already on the queue or song page, just reload it to enable the song-choosing controls.
            location.reload();

            // Display a push notification with no URL, since we're already on the right page.
            push(message);
        } else {
            // Otherwise, display a push notification to take the user to the queue.
            push(message, "/stations/1");
        }
    }
}

function next_song(queue_entry) {
    $("#now-playing-title").html(queue_entry.song.title);
    $("#now-playing-artist").html(queue_entry.song.artist);
    set_upvote_icon(false);

    // Remove the upvote handler for the old song.
    $("#now-playing-upvote").unbind("click");
    // And bind a handler for the new song.
    $("#now-playing-upvote").click(() => {
        toggle_upvote(queue_entry.id);
    });

    if (queue_entry.selector) {
        $("#now-playing-selector").html(`Chosen by ${queue_entry.selector.username}`);
        if (queue_entry.rec) {
            $("#now-playing-rec").html(
                `<i class="fa fa-spotify" style="font-size:1.5em;font-wieght:bold"></i>&nbsp;rec`
            )
        } else {
            $("#now-playing-rec").html("")
        }
    }
}

function update_timing(duration_ms, start_ms) {
    setSongStats(duration_ms, start_ms);
}
