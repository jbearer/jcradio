<h2> Plots </h2>

<div id="plots"></div>

<script>
    TESTER = document.getElementById('tester');

    var alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ".split('');

    function normalizeTitle(title) {

        // Delete Paren phrases
        open_paren_i = title.indexOf('(');
        close_paren_i = title.indexOf(')');
        if ((open_paren_i != -1) && (close_paren_i != -1)) {
            title = title.slice(0, open_paren_i) + title.slice(close_paren_i+1)
        }
        // console.log(title);

        // Strip after hyphens
        hyphen_i = title.search(/[-â€“] /g)
        if (hyphen_i != -1) {
            title = title.slice(0, hyphen_i)
        }
        // console.log(title);

        // Upercase
        title = title.toUpperCase();
        // console.log(title);

        // Only Letters
        title = title.replace(/[^A-Z ]/g, '');
        // console.log(title);

        // Split into words
        words = title.split(" ");
        // console.log(words);

        if (!words.length) {
            return [];
        }

        // Trim articles
        articles = ["THE", "A", "AN", "UN", "UNE", "LE", "LES"];
        if (articles.includes(words[0])) {
            words.shift();
        }
        // console.log(words);

        return words;
    }

    function firstLetter(title) {
        normalized = normalizeTitle(title);
        if (normalized.length == 0) {
            return "_";
        } else if (normalized[0].length == 0) {
            return "_";
        }
        return normalized[0][0];
    }

    function generateLetterFreqData(queue_arr) {
        // Create map
        let letter_freq = new Map();
        alphabet.forEach(function (letter) {
            letter_freq.set(letter, 0);
        });
        // console.log(letter_freq)

        // Loop through Queue
        queue_arr.forEach(function (q_entry) {
            var first_letter = firstLetter(q_entry.song.title);
            letter_freq.set(first_letter, letter_freq.get(first_letter)+1);
        });

        // Create the trace
        var trace = {
            x: Array.from(letter_freq.keys()),
            y: Array.from(letter_freq.values()),
            type: "bar"
        };

        return [trace];
    }

    function generateMarkovData(q) {
        // Create an empty dictionary of the form letter1 -> letter2 -> frequency.
        markov = {};
        alphabet.forEach((letter1) => {
            markov[letter1] = {};
            alphabet.forEach((letter2) => {
                markov[letter1][letter2] = 0;
            });
        });

        // Count the first-letter/next-letter pairs.
        q.forEach((e) => {
            if (alphabet.includes(e.song.first_letter) &&
                alphabet.includes(e.song.next_letter))
            {
                ++markov[e.song.first_letter][e.song.next_letter];
            }
        });

        // Normalize the counts to probabilities.
        alphabet.forEach((letter1) => {
            counts = markov[letter1];
            total = Object.values(counts).reduce((x, y) => x + y, 0);
            alphabet.forEach((letter2) => {
                counts[letter2] /= total;
            });
        });

        data = [];
        alphabet.slice().reverse().forEach((letter2) => {
            p = [];
            alphabet.forEach((letter1) => {
                p.push(markov[letter1][letter2])
            });
            data.push({
                x: alphabet,
                y: p,
                name: letter2,
                type: "bar"
            })
        });

        return data;
    }

    $.get("/stations/1/plots.json", {}, (queue_arr) => {
        console.log("QueueArr:", queue_arr);

        // Actually plot the data
        Plotly.newPlot(
            $("<div>").appendTo($("#plots"))[0],
            generateLetterFreqData(queue_arr)
        );
        Plotly.newPlot(
            $("<div>").appendTo($("#plots"))[0],
            generateMarkovData(queue_arr), {
                title: "Next Letter Probability by First Letter",
                barmode: "stack"
            }
        );
    });

</script>

Welcome to the most awesomest plots page! typo
