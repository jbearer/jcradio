# You can use this file to override the built-in defaults of the options in
# the following modules:
# - UV4L core
# - raspidisp driver
# - Streaming Server module.
#
# To get a full list of the available options with their defaults and
# descriptions, please refer to the 'uv4l', 'uv4l-raspidisp' and 'uv4l-server'
# manual pages, or alternatively type the following command:
#
# uv4l --driver raspidisp --help --driver-help --server-help
#
# This file is parsed by uv4l through the 'uv4l_raspidisp' system service script,
# if installed. If you are not using the service facility to load the raspidisp
# driver, then to instruct uv4l to parse this file you must explicitly pass its
# path to the '--driver-config-file' driver option and/or to the '--config-file'
# options, for example (in one line):
#
# uv4l [...] --driver raspidisp --config-file=/path/to/uv4l-raspidisp.conf \
# --driver-config-file=/path/to/uv4l-raspidisp.conf
#
# NOTE: to comment out an option in this file put a # at the beginning of the
# corresponding line. Also, do not assume that the commented options that you
# originally see in a standard installation of this file represent their default
# values.

##################################
# uv4l core options
##################################

driver = raspidisp
#video_nr = 1
auto-video_nr = yes
verbosity = 6
log-color = true
syslog-host = localhost
syslog-port = 514
# frame-timeout = 5000
frame-buffers = 2
# drop-bad-frames = yes
# relaxed-ownership = yes
# extension-presence = no

##################################
# raspidisp driver options
##################################

# display = 0
framerate = 30 # 0 for max
# resolution = 0
# crop-window = 0 # x
# crop-window = 0 # y
# crop-window = 0 # width, 0 for max
# crop-window = 0 # height, 0 for max

#################################
# streaming server options
#################################

### path to a separate config file that will be parsed by the streaming server
### module directly when it's loaded,
### in which you are allowed to specify all the streaming server options
### listed below in the short form "option=value" instead of the longer
### "--server-option = --option=value" form that you must use
### in this configuration file.
#server-config-file = #path

# server-option = --port=443
# server-option = --bind-host-address=localhost
# server-option = --md5-passwords=no
# server-option = --user-password=myp4ssw0rd
# server-option = --admin-password=myp4ssw0rd
### To enable 'config' user authentication
# server-option = --config-password=myp4ssw0rd

### HTTPS options:
# server-option = --use-ssl=yes
# server-option = --ssl-private-key-file=/home/pi/selfsign.key
# server-option = --ssl-certificate-file=/home/pi/selfcign.crt

### WebRTC options:
server-option = --enable-webrtc=yes
server-option = --enable-webrtc-datachannels=no
#server-option = --webrtc-datachannel-label=uv4l-raspidisp
#server-option = --webrtc-datachannel-socket=/tmp/uv4l-raspidisp.socket
server-option = --enable-webrtc-video=no
server-option = --enable-webrtc-audio=yes
# server-option = --webrtc-receive-video=yes
# server-option = --webrtc-receive-datachannels=no
#server-option = --webrtc-received-datachannel-socket=/tmp/uv4l-raspidisp.socket
# server-option = --webrtc-receive-audio=yes
server-option = --webrtc-received-audio-volume=7.0
server-option = --webrtc-prerenderer-smoothing=no
#server-option = --webrtc-recdevice-index=14
server-option = --webrtc-vad=no
server-option = --webrtc-echo-cancellation=no
# server-option = --webrtc-preferred-vcodec=0
# server-option = --webrtc-enable-hw-codec=yes
# server-option = --webrtc-video-format=60
# server-option = --webrtc-hw-vcodec-minbitrate=256
# server-option = --webrtc-hw-vcodec-maxbitrate=4000
# server-option = --webrtc-hw-vcodec-startbitrate=800
# server-option = --webrtc-hw-vcodec-intra-period=1800
# server-option = --webrtc-suspend-below-min-bitrate=no
server-option = --webrtc-max-playout-delay=0
# server-option = --webrtc-cpu-overuse-detection=no
# server-option = --webrtc-combined-audiovideo-bwe=no
# server-option = --webrtc-stun-urls=stun:stun.l.google.com:19302
# server-option = --webrtc-stun-urls # use this for empty list of urls
# server-option = --webrtc-ice-servers=[{"urls": "stun:stun1.example.net"}, {"urls": "turn:turn.example.org", "username": "user", "credential": "myPassword"}]
# server-option = --webrtc-stun-server=yes
# server-option = --webrtc-tcp-candidate-policy=1
# server-option = --webrtc-rtcp-mux-policy=0
# server-option = --webrtc-enable-dscp=no
# server-option = --webrtc-ignore-loopback=yes
# server-option = --webrtc-trickle-ice=yes
# server-option = --webrtc-stats-dir=/usr/share/uv4l/statistics/
### video rendering window positions and sizes on the display.
### for each window, default values can be optionally overridden, but if you
### do this you must specify one line for each of the four x, y, width, height
### window properties (in that order).
### If fullscreen is set the image is stretched to the maximum available display
### resolution from the specified size.
### window 1
# server-option = --webrtc-renderer-window=0
# server-option = --webrtc-renderer-window=0
# server-option = --webrtc-renderer-window=480
# server-option = --webrtc-renderer-window=352
# server-option = --webrtc-renderer-fullscreen=no
# server-option = --webrtc-renderer-rotation=180
# server-option = --webrtc-renderer-opacity=255
### window 2
# server-option = --webrtc-renderer2-window=480
# server-option = --webrtc-renderer2-window=0
# server-option = --webrtc-renderer2-window=320
# server-option = --webrtc-renderer2-window=240
### window 3
# server-option = --webrtc-renderer3-window=0
# server-option = --webrtc-renderer3-window=352
# server-option = --webrtc-renderer3-window=176
# server-option = --webrtc-renderer3-window=128
# if enabled, this overrides the size of the rendering windows:
# server-option = --webrtc-renderer-source-size=no


### Fine-tuning options:
# server-option = --connection-timeout=15
# server-option = --enable-keepalive=yes
# server-option = --max-keepalive-requests=0
# server-option = --keepalive-timeout=7
# server-option = --max-queued-connections=8
# server-option = --max-streams=3
# server-option = --max-threads=5
# server-option = --thread-idle-time=10
# server-option = --chuncked-transfer-encoding=yes
# server-option = --acao=*

### Advanced options:
# server-option = --frame-timeout=5000
# server-option = --frame-buffers=auto

### These options are specific to the HTTP/HTTPS Server
### serving custom Web pages only:
server-option = --enable-www-server=yes
#server-option = --www-root-path=/home/pi/webrtc_test/
#server-option = --www-index-file=index.html
#server-option = --www-port=443
#server-option = --www-password=jcradio
#server-option = --www-use-ssl=yes
#server-option = --www-ssl-private-key-file=/etc/letsencrypt/live/jcradio.ddns.net/privkey.pem
#server-option = --www-ssl-certificate-file=/etc/letsencrypt/live/jcradio.ddns.net/fullchain.pem
server-option = --www-webrtc-signaling-path=/webrtc
# server-option = --www-bind-host-address=#host
# server-option = --www-connection-timeout=15
# server-option = --www-enable-keepalive=no
# server-option = --www-max-keepalive-requests=0
# server-option = --www-keepalive-timeout=7
# server-option = --www-max-queued-connections=8
# server-option = --www-max-threads=4
# server-option = --www-thread-idle-time=10
# server-option = --www-chuncked-transfer-encoding=no
# server-option = --www-set-etag-header=yes
# server-option = --www-acao=*

### Other options:
# server-option = --editable-config-file=#path
server-option = --enable-builtin-ui=no
# server-option = --enable-control-panel=yes
# server-option = --enable-rest-api=yes
